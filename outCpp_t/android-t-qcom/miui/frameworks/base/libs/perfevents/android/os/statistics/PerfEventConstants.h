#ifndef ANDROID_OS_STATISTICS_PERFEVENTCONSTANTS_H
#define ANDROID_OS_STATISTICS_PERFEVENTCONSTANTS_H

#include <errno.h>
#include <inttypes.h>
#include <stdint.h>
#include <sys/types.h>

#include "jni.h"

namespace android {
namespace os {
namespace statistics {
//注意：此文件中的常量定义需要与Java代码保持同步

#define FLAG_ROOT_EVENT 0x00000001

#define FLAG_INITIATOR_POSITION_UNKNOWN 0x00000000
#define FLAG_INITIATOR_POSITION_SLAVE 0x00000002
#define FLAG_INITIATOR_POSITION_MASTER 0x00000004
#define FLAG_INITIATOR_POSITION_MASK 0x00000006

#define FLAG_HAS_PROC_LAZYINFO 0x00000010
#define FLAG_PROC_LAZYINFO_RESOLVED 0x00000020
#define FLAG_HAS_KERNEL_LAZYINFO 0x00000040
#define FLAG_KERNEL_LAZYINFO_RESOLVED 0x00000080

#define FLAG_BLOCKED 0x00000100
#define FLAG_BLOCKED_BY_SAME_PROCESS 0x00000200
#define FLAG_BLOCKED_BY_CROSS_PROCESS 0x00000400
#define FLAG_BLOCKED_BY_ONE_INCLUSIVE_BLOCKER 0x00000800
#define FLAG_BLOCKED_BY_ONE_COINCIDED_BLOCKER 0x00001000
#define FLAG_BLOCKED_BY_ONE_OVERLAPPED_BLOCKER 0x00002000
#define FLAG_BLOCKED_BY_MULTIBPLE_BLOCKER 0x00004000

#define FLAG_BLOCKER 0x00010000
#define FLAG_BLOCKER_TO_SAME_PROCESS 0x00020000
#define FLAG_BLOCKER_TO_CROSS_PROCESS 0x00040000

#define FLAG_USER_PERCEPTIBLE 0x00100000

#define FLAG_DETAILS_SOURCE_MASK 0x0F000000
#define FLAG_FROM_BLOCK_MEMORY 0x01000000
#define FLAG_FROM_PERFEVENT_DETAILS 0x02000000

#define FLAG_NO_CHECK 0x10000000

#define MICRO_EVENT_TYPE_START 0
#define TYPE_SINGLE_LOCK_HOLD (MICRO_EVENT_TYPE_START + 0)
#define TYPE_SINGLE_LOCK_WAIT (MICRO_EVENT_TYPE_START + 1)
#define TYPE_SINGLE_CONDITION_AWAKEN (MICRO_EVENT_TYPE_START + 2)
#define TYPE_SINGLE_CONDITION_WAIT (MICRO_EVENT_TYPE_START + 3)
#define TYPE_SINGLE_BINDER_CALL (MICRO_EVENT_TYPE_START + 4)
#define TYPE_SINGLE_BINDER_EXECUTION (MICRO_EVENT_TYPE_START + 5)
#define TYPE_SINGLE_TRACE_POINT (MICRO_EVENT_TYPE_START + 6)
#define TYPE_SINGLE_SYSTEM_TRACE_EVENT (MICRO_EVENT_TYPE_START + 7)
#define TYPE_SINGLE_LOOPER_MESSAGE (MICRO_EVENT_TYPE_START + 8)
#define TYPE_SINGLE_INPUT_EVENT (MICRO_EVENT_TYPE_START + 9)
#define TYPE_SINGLE_JNI_METHOD (MICRO_EVENT_TYPE_START + 10)
#define TYPE_LOOPER_ONCE (MICRO_EVENT_TYPE_START + 11)
#define TYPE_LOOPER_CHECKPOINT (MICRO_EVENT_TYPE_START + 12)
#define TYPE_SCHED_WAIT (MICRO_EVENT_TYPE_START + 13)
#define TYPE_SCHED_WAKE (MICRO_EVENT_TYPE_START + 14)
#define TYPE_MM_SLOWPATH (MICRO_EVENT_TYPE_START + 15)
#define MICRO_EVENT_TYPE_COUNT 16

#define MACRO_EVENT_TYPE_START 65536
#define TYPE_SINGLE_EVENT_LOG_ITEM  (MACRO_EVENT_TYPE_START + 0)
#define TYPE_MACRO_PLACE_HOLD_1 (MACRO_EVENT_TYPE_START + 1)
#define TYPE_SINGLE_JANK_RECORD (MACRO_EVENT_TYPE_START + 2)
#define TYPE_DEX2OAT (MACRO_EVENT_TYPE_START + 3)
#define TYPE_BINDER_STARVATION (MACRO_EVENT_TYPE_START + 4)
#define TYPE_E2ESCENARIO_ONCE (MACRO_EVENT_TYPE_START + 5)
#define TYPE_MEMORY_SLOWPATH (MACRO_EVENT_TYPE_START + 6)
#define MACRO_EVENT_TYPE_COUNT 7

#define TOTAL_EVENT_TYPE_COUNT (MICRO_EVENT_TYPE_COUNT + MACRO_EVENT_TYPE_COUNT)

#define TYPE_INVALID_PERF_EVENT 0xFFFFFFFF

} //namespace statistics
} //namespace os
} //namespace android

#endif  // ANDROID_OS_STATISTICS_PERFEVENTCONSTANTS_H
